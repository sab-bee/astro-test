---
import { renderRichText, storyblokEditable } from "@storyblok/astro";

const { blok } = Astro.props;
---

<div {...storyblokEditable(blok)} class="card w-fit mx-auto rounded-2xl">
  <div
    class="bg-primary border-2 border-dashed border-black p-8 pr-14 rounded-2xl cursor-pointer hover:bg-shade transition-colors w-[100%] md:w-[450px]"
  >
    <p class="italic m-0 font-normal text-base">{blok.testimoni}</p>
    <h2 class="m-0 text-lg mt-2 font-medium">{blok.reviewer}</h2>
    <h2 class="m-0 font-medium text-neutral-500 text-base">{blok.title}</h2>
  </div>

  <div class="container cursor-pointer">
    <div class="carda" id="card-u">
      <h2>This is title</h2>
      <div class="details">
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique quae quaerat enim
          fugiat aliquid voluptate, reiciendis accusamus quia quas aperiam ex voluptas hic odit,
          temporibus saepe non sunt. Fugiat fuga recusandae aspernatur beatae asperiores distinctio
          animi consequuntur cum dignissimos tenetur?
        </p>
        <button class="cta">confirm</button>
      </div>
    </div>
  </div>
</div>

<style>
  .card {
    transition: 0.4s ease-out;
  }
  .card:not(:first-child) {
    margin-top: -42%;
    box-shadow: rgba(0, 0, 0, 0.308) 0 -20px 20px -10px;
  }

  .arrange {
    transform: translateY(75%);
  }

  @media only screen and (max-width: 768px) {
    .card:not(:first-child) {
      margin-top: calc(-10%);
    }
    .arrange {
      transform: translateY(20%);
    }
  }


  /* ---------------- */
  .container {
    height: 100vh;
    width: 100%;
    position: relative;
  }
  .carda {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 500px;
    height: 300px;
    border: 2px solid black;
    border-radius: 15px;
    padding: 2rem;
    transform: translate(-50%, -50%);
    transition: 0.2s ease-out;
  }

  .carda h2 {
    font-size: 1.4rem;
    font-weight: 500;
  }

  .carda .details {
    margin-top: 1rem;
  }

  .carda .cta {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: #000;
    color: white;
    border-radius: 4px;
    cursor: pointer;
  }

  .move {
    transform: translate(-40%, -50%);
  }
</style>

<script>
  const cards = document.querySelectorAll(".card");
  cards.forEach((card, i) => {
    card.addEventListener("mouseover", () => {
      for (let j = i + 1; j < cards.length; j++) {
        cards[j].classList.add("arrange");
      }
    });

    card.addEventListener("mouseleave", () => {
      for (let j = i + 1; j < cards.length; j++) {
        cards[j].classList.remove("arrange");
      }
    });
  });

  const carda = document.getElementById('card-u')
  carda.addEventListener("mouseover", () => {
    console.log('hello')
    carda.classList.add("move");
  });

  carda.addEventListener("mouseleave", () => {
    carda.classList.remove("move");
  });
</script>
